// <auto-generated />
using System;
using MeetingSchedule.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetingSchedule.Migrations
{
    [DbContext(typeof(MeetingScheduleContext))]
    partial class MeetingScheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeetingSchedule.Models.Entities.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Descrição da reunião 1",
                            End = new DateTime(2022, 9, 20, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reunião 1",
                            RoomId = 1,
                            Start = new DateTime(2022, 9, 20, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Descrição da reunião 2",
                            End = new DateTime(2022, 9, 20, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reunião 2",
                            RoomId = 2,
                            Start = new DateTime(2022, 9, 20, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Descrição da reunião 3",
                            End = new DateTime(2022, 9, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reunião 3",
                            RoomId = 1,
                            Start = new DateTime(2022, 9, 20, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Descrição da reunião 4",
                            End = new DateTime(2022, 9, 21, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reunião 4",
                            RoomId = 1,
                            Start = new DateTime(2022, 9, 21, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MeetingSchedule.Models.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#00ff99",
                            Name = "Sala 1"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#ff9933",
                            Name = "Sala 2"
                        });
                });

            modelBuilder.Entity("MeetingSchedule.Models.Entities.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserName = "GustavoDBP",
                            Password = "123456",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("MeetingSchedule.Models.Entities.Meeting", b =>
                {
                    b.HasOne("MeetingSchedule.Models.Entities.Room", "Room")
                        .WithMany("Meetings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MeetingSchedule.Models.Entities.Room", b =>
                {
                    b.Navigation("Meetings");
                });
#pragma warning restore 612, 618
        }
    }
}
